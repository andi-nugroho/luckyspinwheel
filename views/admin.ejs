<!DOCTYPE html>
<html>
<head>
    <title>Admin Panel</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <link href="https://cdn.jsdelivr.net/npm/@sweetalert2/theme-dark@4/dark.css" rel="stylesheet">
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" rel="stylesheet">
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <link href="https://cdn.datatables.net/1.11.5/css/dataTables.tailwind.min.css" rel="stylesheet">
    <script src="https://cdn.datatables.net/1.11.5/js/jquery.dataTables.min.js"></script>
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <style>
        .shine-effect {
            background: linear-gradient(90deg, transparent, rgba(255,255,255,0.2), transparent);
            background-size: 200% 100%;
            animation: shine 2s infinite;
        }
        @keyframes shine {
            0% { background-position: -200% 0; }
            100% { background-position: 200% 0; }
        }
        .float {
            animation: float 6s ease-in-out infinite;
        }
        @keyframes float {
            0%, 100% { transform: translateY(0px); }
            50% { transform: translateY(-20px); }
        }
        .hover-scale {
            transition: all 0.2s;
        }
        .hover-scale:hover {
            transform: scale(1.02);
        }
        .table-container {
            height: 500px;
            overflow: hidden;
        }
        .token-table-wrapper {
            max-height: calc(100vh - 400px);
            min-height: 400px;
            overflow: hidden;
        }
    </style>
</head>
<body class="bg-gradient-to-br from-gray-900 via-purple-900 to-gray-900 text-white min-h-screen flex items-center justify-center overflow-x-hidden" style="background-image: url('data:image/svg+xml,%3Csvg xmlns=&quot;http://www.w3.org/2000/svg&quot; width=&quot;28&quot; height=&quot;49&quot; viewBox=&quot;0 0 28 49&quot;%3E%3Cg fill=&quot;%239333ea&quot; fill-opacity=&quot;0.1&quot;%3E%3Cpath d=&quot;M13.99 9.25l13 7.5v15l-13 7.5L1 31.75v-15l12.99-7.5zM3 17.9v12.7l10.99 6.34 11-6.35V17.9l-11-6.34L3 17.9z&quot;/%3E%3C/g%3E%3C/svg%3E'), linear-gradient(to bottom right, #111827, #513568, #111827); background-repeat: repeat;"></body>
    <!-- Background Effects -->
    <div class="absolute inset-0 bg-[radial-gradient(ellipse_at_center,_var(--tw-gradient-stops))] from-purple-900/20 via-gray-900/40 to-gray-900/80"></div>
    
    <div class="container mx-auto px-2 sm:px-4 py-4 sm:py-8 relative z-10">
        <!-- Admin Header -->
        <div class="text-center mb-8 float">
            <h1 class="text-4xl sm:text-5xl font-bold mb-4 text-transparent bg-clip-text bg-gradient-to-r from-purple-400 to-pink-600">
                Lucky Wheel Admin
            </h1>
            <p class="text-lg text-purple-200 mt-2">Manage prizes and generate tokens</p>
        </div>

        <div class="grid grid-cols-1 lg:grid-cols-2 gap-6 sm:gap-8">
            <!-- Prize Management Section -->
            <div class="bg-gray-800/50 backdrop-blur-sm rounded-xl shadow-lg p-6 border border-purple-500/20 hover-scale">
                <h2 class="text-2xl font-bold mb-6 flex items-center text-transparent bg-clip-text bg-gradient-to-r from-purple-400 to-pink-600">
                    <i class="fas fa-gift mr-3"></i>Prize Management
                </h2>
                <form id="prizeForm" class="space-y-4">
                    <div class="grid grid-cols-1 sm:grid-cols-2 gap-4">
                        <div>
                            <label class="block text-sm font-medium mb-2">Prize Name</label>
                            <input type="text" name="name" class="w-full p-2 rounded bg-gray-700 border border-gray-600" required>
                        </div>
                        <div>
                            <label class="block text-sm font-medium mb-2">Probability (%)</label>
                            <input type="number" name="probability" min="0" max="100" class="w-full p-2 rounded bg-gray-700 border border-gray-600" required>
                        </div>
                    </div>
                    <div>
                        <label class="block text-sm font-medium mb-2">Description</label>
                        <textarea name="description" class="w-full p-2 rounded bg-gray-700 border border-gray-600" rows="2"></textarea>
                    </div>
                    <div>
                        <label class="block text-sm font-medium mb-2">Image URL</label>
                        <input type="url" name="imageUrl" class="w-full p-2 rounded bg-gray-700 border border-gray-600">
                    </div>
                    <div>
                        <label class="block text-sm font-medium mb-2">Color</label>
                        <input type="color" name="color" class="w-full p-1 rounded bg-gray-700 border border-gray-600">
                    </div>
                    <button type="submit" 
                            class="w-full bg-gradient-to-r from-purple-600 to-pink-600 text-white px-4 py-3 rounded-lg hover:from-purple-700 hover:to-pink-700 transition-all duration-200 flex items-center justify-center shine-effect">
                        <i class="fas fa-plus mr-2"></i>Add Prize
                    </button>
                </form>

                <!-- Prize List -->
                <div class="mt-8">
                    <div class="flex items-center justify-between mb-6">
                        <h3 class="text-xl font-bold text-transparent bg-clip-text bg-gradient-to-r from-purple-400 to-pink-600">Prize List</h3>
                        <div class="flex gap-2">
                            <button onclick="refreshPrizes()" class="px-3 py-1 bg-purple-600/30 hover:bg-purple-600/50 rounded-lg transition-colors">
                                <i class="fas fa-sync-alt"></i>
                            </button>
                        </div>
                    </div>
                    <div class="overflow-hidden rounded-lg border border-purple-500/20">
                        <table id="prizeTable" class="min-w-full divide-y divide-purple-500/20">
                            <thead class="bg-gray-700/50">
                                <tr>
                                    <th class="px-4 py-3 text-left">Prize</th>
                                    <th class="px-4 py-3">Description</th>
                                    <th class="px-4 py-3 text-center">Probability</th>
                                    <th class="px-4 py-3 text-center">Color</th>
                                    <th class="px-4 py-3 text-center">Actions</th>
                                </tr>
                            </thead>
                            <tbody class="divide-y divide-gray-700">
                                <% prizes.forEach(prize => { %>
                                <tr class="hover:bg-gray-700/50 transition-colors">
                                    <td class="px-4 py-3">
                                        <div class="flex items-center space-x-3">
                                            <% if (prize.image_url) { %>
                                                <img src="<%= prize.image_url %>" class="w-10 h-10 rounded-lg object-cover bg-gray-600">
                                            <% } else { %>
                                                <div class="w-10 h-10 rounded-lg bg-gray-600 flex items-center justify-center">
                                                    <i class="fas fa-gift text-gray-400"></i>
                                                </div>
                                            <% } %>
                                            <span class="font-medium"><%= prize.name %></span>
                                        </div>
                                    </td>
                                    <td class="px-4 py-3 text-gray-300 text-sm"><%= prize.description || '-' %></td>
                                    <td class="px-4 py-3 text-center">
                                        <span class="px-3 py-1 bg-purple-500/20 text-purple-300 rounded-full text-sm">
                                            <%= prize.probability %>%
                                        </span>
                                    </td>
                                    <td class="px-4 py-3 text-center">
                                        <div class="flex justify-center">
                                            <div class="w-6 h-6 rounded-full border-2 border-gray-600" 
                                                 style="background-color: <%= prize.color || '#808080' %>">
                                            </div>
                                        </div>
                                    </td>
                                    <td class="px-4 py-3 text-center">
                                        <div class="flex justify-center space-x-2">
                                            <button onclick="editPrize(<%= JSON.stringify(prize) %>)" 
                                                    class="px-2 py-1 bg-blue-600/30 hover:bg-blue-600/50 rounded transition-colors">
                                                <i class="fas fa-edit"></i>
                                            </button>
                                            <button onclick="deletePrize(<%= prize.id %>)" 
                                                    class="px-2 py-1 bg-red-600/30 hover:bg-red-600/50 rounded transition-colors">
                                                <i class="fas fa-trash"></i>
                                            </button>
                                        </div>
                                    </td>
                                </tr>
                                <% }); %>
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>

            <!-- Token Generation Section -->
            <div class="bg-gray-800/50 backdrop-blur-sm rounded-xl shadow-lg p-6 border border-purple-500/20 hover-scale">
                <h2 class="text-2xl font-bold mb-6 flex items-center text-transparent bg-clip-text bg-gradient-to-r from-purple-400 to-pink-600">
                    <i class="fas fa-ticket-alt mr-3"></i>Token Generation
                </h2>
                <form id="tokenForm" class="space-y-4">
                    <div>
                        <label class="block text-sm font-medium mb-2">Select Prize</label>
                        <select name="prize" class="w-full p-2 rounded bg-gray-700 border border-gray-600">
                            <% prizes.forEach(prize => { %>
                                <option value="<%= prize.id %>"><%= prize.name %> (<%= prize.probability %>%)</option>
                            <% }); %>
                        </select>
                    </div>
                    <div>
                        <label class="block text-sm font-medium mb-2">Number of Tokens</label>
                        <input type="number" name="tokenCount" min="1" max="100" value="1" 
                               class="w-full p-2 rounded bg-gray-700 border border-gray-600">
                    </div>
                    <button type="submit" 
                            class="w-full bg-gradient-to-r from-green-600 to-emerald-600 text-white px-4 py-3 rounded-lg hover:from-green-700 hover:to-emerald-700 transition-all duration-200 flex items-center justify-center shine-effect">
                        <i class="fas fa-magic mr-2"></i>Generate Tokens
                    </button>
                </form>
                
                <!-- Token Results -->
                <div class="bg-gray-800/50 backdrop-blur-sm rounded-xl shadow-lg p-6 border border-purple-500/20 hover-scale mt-8">
                    <div class="flex items-center justify-between mb-6">
                        <h3 class="text-xl font-bold text-transparent bg-clip-text bg-gradient-to-r from-purple-400 to-pink-600">
                            Token Management
                        </h3>
                        <div class="flex gap-2">
                            <button id="refreshTokens" class="px-3 py-1 bg-purple-600/30 hover:bg-purple-600/50 rounded-lg transition-colors">
                                <i class="fas fa-sync-alt"></i>">Prize</th>
                            </button>
                            <button id="exportTokens" class="px-3 py-1 bg-green-600/30 hover:bg-green-600/50 rounded-lg transition-colors">
                                <i class="fas fa-file-export"></i>
                            </button>
                        </div>
                    </div>
                    <div class="overflow-hidden rounded-lg border border-purple-500/20">
                        <table id="tokenTable" class="min-w-full divide-y divide-purple-500/20">
                            <thead class="bg-gray-700/50">
                                <tr>
                                    <th class="px-4 py-3 text-left">Token</th>
                                    <th class="px-4 py-3 text-center">Prize</th>
                                    <th class="px-4 py-3 text-center">Status</th>
                                    <th class="px-4 py-3 text-center">Created</th>
                                    <th class="px-4 py-3 text-center">Actions</th>
                                </tr>
                            </thead>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <script src="/js/admin.js"></script>
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            const tokenTable = $('#tokenTable').DataTable({
                processing: true,
                serverSide: false,
                deferRender: true,
                scrollY: '350px',
                scrollCollapse: true,
                scroller: true,
                ajax: {
                    url: '/admin/tokens',
                    dataSrc: 'data'
                },
                responsive: true,
                pageLength: 25,
                order: [[3, 'desc']],
                columns: [
                    { 
                        data: 'id',
                        render: function(data) {
                            return `<div class="font-mono text-sm bg-gray-700/40 px-2 py-1 rounded">${data}</div>`;
                        }
                    },
                    { 
                        data: 'prize_name',
                        render: function(data, type, row) {
                            const probability = row.prize_probability || 0;
                            return `
                                <div class="flex items-center">
                                    <span class="text-purple-300">${data || 'N/A'}</span>
                                    <span class="ml-2 text-xs text-purple-400/70">${probability}%</span>
                                </div>`;
                        }
                    },
                    { 
                        data: 'used',
                        className: 'text-center',
                        render: function(data) {
                            return data ? 
                                '<span class="px-3 py-1 bg-red-500/20 text-red-400 rounded-full text-xs">Used</span>' : 
                                '<span class="px-3 py-1 bg-green-500/20 text-green-400 rounded-full text-xs">Available</span>';
                        }
                    },
                    { 
                        data: 'created_at',
                        render: function(data) {
                            const date = data ? new Date(data) : new Date();
                            return `
                                <div class="text-sm items-center">
                                    <div class="text-gray-300">${date.toLocaleDateString()}</div>
                                    <div class="text-gray-400 text-xs">${date.toLocaleTimeString()}</div>
                                </div>`;
                        }
                    },
                    {
                        data: 'id',
                        className: 'text-center',
                        render: function(data) {
                            return `
                                <button onclick="copyToClipboard('${data}')" 
                                        class="px-2 py-1 bg-purple-600/30 hover:bg-purple-600/50 rounded transition-colors">
                                    <i class="fas fa-copy"></i>
                                </button>`;
                        }
                    }
                ],
                dom: '<"flex items-center justify-between mb-4"<"flex items-center"l<"ml-4"f>>><"min-h-[400px]"t><"flex items-center justify-between mt-4"<"text-sm text-gray-400"i><"flex"p>>',
                language: {
                    lengthMenu: `
                        <div class="flex items-center">
                            <span class="text-gray-400 mr-2">Show</span>
                            <select class="bg-gray-700 border border-gray-600 text-white rounded px-2 py-1">
                                <option value="10">10</option>
                                <option value="25">25</option>
                                <option value="50">50</option>
                                <option value="100">100</option>
                            </select>
                            <span class="text-gray-400 ml-2">entries</span>
                        </div>`,
                    paginate: {
                        previous: '<i class="fas fa-chevron-left"></i>',
                        next: '<i class="fas fa-chevron-right"></i>'
                    }
                },
                initComplete: function() {
                    // Existing styling
                    $('.dataTables_wrapper').addClass('bg-gray-800/50 p-4 rounded-lg');
                    $('.dataTables_filter input').addClass('bg-gray-700 border border-gray-600 text-white rounded px-4 py-1');
                    $('.dataTables_length select').addClass('bg-gray-700 border border-gray-600 text-white rounded px-2 py-1');
                    
                    // Update pagination styling
                    $('.dataTables_paginate').addClass('flex items-center justify-end gap-2');
                    $('.paginate_button').addClass('px-3 py-1 rounded transition-colors duration-200');
                    $('.paginate_button:not(.disabled)').addClass('hover:bg-purple-600/50 text-gray-300 hover:text-white');
                    $('.paginate_button.current').addClass('!bg-purple-600 text-white');
                    $('.paginate_button.disabled').addClass('text-gray-600 cursor-not-allowed');
                    
                    // Add custom pagination container styling
                    $('.dataTables_paginate').wrap('<div class="mt-4 border-t border-gray-700 pt-4"></div>');
                    
                    // Add fancy hover effects
                    $('.paginate_button:not(.disabled)').hover(
                        function() { $(this).addClass('transform scale-110'); },
                        function() { $(this).removeClass('transform scale-110'); }
                    );
                },
                drawCallback: function() {
                    // Re-apply styles on page change
                    $('.paginate_button').addClass('px-3 py-1 rounded transition-colors duration-200');
                    $('.paginate_button:not(.disabled)').addClass('hover:bg-purple-600/50 text-gray-300 hover:text-white');
                    $('.paginate_button.current').addClass('!bg-purple-600 text-white');
                    $('.paginate_button.disabled').addClass('text-gray-600 cursor-not-allowed');
                }
            });

            // Auto refresh every 30 seconds
            setInterval(() => {
                tokenTable.ajax.reload(null, false);
            }, 30000);

            // Refresh on form submit
            document.getElementById('tokenForm').addEventListener('submit', function(e) {
                setTimeout(() => {
                    tokenTable.ajax.reload(null, false);
                }, 1000);
            });

            // Manual refresh button
            document.getElementById('refreshTokens').addEventListener('click', () => {
                const button = document.getElementById('refreshTokens');
                button.disabled = true;
                button.innerHTML = '<i class="fas fa-sync-alt fa-spin"></i>';
                
                tokenTable.ajax.reload(null, false);
                
                setTimeout(() => {
                    button.disabled = false;
                    button.innerHTML = '<i class="fas fa-sync-alt"></i>';
                }, 1000);
            });

            // Add export functionality
            document.getElementById('exportTokens').addEventListener('click', () => {
                const data = tokenTable.data().toArray();
                const csv = data.map(row => 
                    `${row.id},${row.prize_name},${row.used ? 'Used' : 'Available'},${new Date(row.created_at).toLocaleString()}`
                ).join('\n');
                
                const blob = new Blob(['Token,Prize,Status,Created At\n' + csv], { type: 'text/csv' });
                const url = window.URL.createObjectURL(blob);
                const a = document.createElement('a');
                a.href = url;
                a.download = 'tokens.csv';
                a.click();
                window.URL.revokeObjectURL(url);
            });
        });
    </script>
</body>
</html>
